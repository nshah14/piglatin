#!groovy

node('node') {


    currentBuild.result = "SUCCESS"

    try {

       stage('Checkout'){

            def commitHash = checkout(scm).GIT_COMMIT
    
       }

    

       stage('Build Docker'){

           /**
               docker-machine env
               docker build -t nshah/piglatin .
               eval $(docker-machine env)
               docker build -t nshah/piglatin .
               
           */ 
       }

       stage('Deploy'){

         echo 'Push to Repo'
         /**
            docker run -p 3000:3000 -d nshah/piglatin
         */

       }

       stage('Cleanup'){

         echo 'cleanup'
        
         mail body: 'project build successful',
                     from: 'xxxx@yyyyy.com',
                     replyTo: 'xxxx@yyyy.com',
                     subject: 'project build successful',
                     to: 'yyyyy@yyyy.com'
       }


       stage('Test'){

         env.NODE_ENV = "test"

         print "Environment will be : ${env.NODE_ENV}"
          /** for running the jasmine test.
            jasmine
          */

       }


    }
    catch (err) {

        currentBuild.result = "FAILURE"

            mail body: "project build error is here: ${env.BUILD_URL}" ,
            from: 'xxxx@yyyy.com',
            replyTo: 'yyyy@yyyy.com',
            subject: 'project build failed',
            to: 'zzzz@yyyyy.com'

        throw err
    }

}